{"version":3,"sources":["fonts/MyFont.woff","App.styled.js","Reducer.js","globalStyles.js","App.js","Actions.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","background","height","Select","button","padding","margin","fontSize","borderRadius","props","backgroundColor","disabled","color","AddButton","fontFamily","borderWidth","transition","transform","RemoveButton","Item","NewTaskInput","input","init","tasks","newTask","lastId","show","reducer","state","action","type","map","x","done","id","filter","name","styles","css","MyFont","my_todo_list","TodoItem","onRemove","onCheck","onClick","checked","App","useReducer","dispatch","useEffect","useCallback","removeAct","checkAct","changeView","viewAct","addNewTask","setNewTaskName","e","target","value","onChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82f6ad18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MyFont.e1a4f1e7.woff\";","import styled from '@emotion/styled';\n\nexport const Container = styled.div({\n  background: 'linear-gradient(#e6646533, #9198e588)',\n  height: '100%'\n});\nexport const Select = styled.button(\n  {\n    padding: '2px 10px',\n    margin: '5px',\n    fontSize: 16,\n    borderRadius: '10px'\n  },\n  props => ({\n    backgroundColor: props.disabled ? '#33aa22' : '',\n    color: props.disabled ? '#fff' : ''\n  })\n);\nexport const AddButton = styled.button({\n  fontFamily: 'MyFont',\n  borderWidth: 0,\n  backgroundColor: 'transparent',\n  fontSize: 16,\n  color: '#5c85c7',\n  transition: 'all 0.5s',\n  '&:hover': {\n    color: '#2db503',\n    transform: 'scale(2)'\n  }\n});\nexport const RemoveButton = styled.button({\n    fontFamily: 'MyFont',\n    borderWidth: 0,\n    backgroundColor: 'transparent',\n    fontSize: 16,\n    color: '#5c85c7',\n    transition: 'all 0.5s',\n    '&:hover': {\n      color: '#e22b0a',\n      transform: 'scale(1.5)'\n    }\n  }\n);\nexport const Item = styled.div`margin: 10px;`;\nexport const NewTaskInput = styled.input`border-width: 0;padding: 5px;font-size: 15px;`;\n","export const init = {\n  tasks: [],\n  newTask: \"\",\n  lastId: 0,\n  show: \"all\"\n};\nexport const reducer = (state = init, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      return { ...state, tasks: action.tasks, lastId: action.lastId };\n    case \"CHANGE_NEW_TASK_NAME\":\n      return { ...state, newTask: action.newTask };\n    case \"CHECK\":\n      return {\n        ...state,\n        tasks: state.tasks.map(x => ({\n          ...x,\n          done: x.id === action.id ? !x.done : x.done\n        }))\n      };\n    case \"REMOVE\":\n      return { ...state, tasks: state.tasks.filter(x => x.id !== action.id) };\n    case \"CHANGE_VIEW\":\n      return { ...state, show: action.show };\n    case \"ADD_NEW_TASK\":\n      return {\n        ...state,\n        tasks: [\n          ...state.tasks,\n          { id: state.lastId, name: state.newTask, done: false }\n        ],\n        lastId: state.lastId + 1,\n        newTask: \"\"\n      };\n    default:\n      return { ...state };\n  }\n};\n","import React from 'react';\nimport { Global, css } from '@emotion/core';\nimport MyFont from './fonts/MyFont.woff';\n\nexport default () => (\n  <Global\n    styles={css`\n      html, body, #root {\n        height: 100%;\n      }\n      body {\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n          \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n          \"Helvetica Neue\", sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n      }\n\n      @font-face {\n        font-family: \"MyFont\";\n        src: local(\"MyFont\"), url(${MyFont}) format(\"woff\");\n      }\n    `}\n  />\n);\n","import React from 'react';\nimport { AddButton, Container, Item, NewTaskInput, RemoveButton, Select } from './App.styled';\nimport { useCallback, useReducer, useEffect } from 'react';\nimport { reducer, init } from './Reducer';\nimport Global from './globalStyles';\nimport {\n  addTaskAct,\n  changeNameAct,\n  checkAct,\n  initAct,\n  removeAct,\n  viewAct\n} from './Actions';\n\nconst my_todo_list = [\n  { id: 1, name: 'Get Milk', done: false },\n  { id: 2, name: 'Go to Gym', done: false },\n  { id: 3, name: 'Call Mom', done: false },\n  { id: 4, name: 'Work', done: false },\n  { id: 5, name: 'Send Email', done: false }\n];\nconst TodoItem = ({ id, name, onRemove, done, onCheck }) => (\n  <Item\n    onClick={onCheck}\n  >\n    <input\n      checked={done}\n      type=\"checkbox\"\n    />\n    <span>{id}</span> - <span>{name}</span>\n    {' - '}\n    <span>{done ? 'done' : 'undone'}</span>\n    <RemoveButton onClick={onRemove}>&#xe807;</RemoveButton>\n  </Item>\n);\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, init, () => init);\n  useEffect(() => dispatch(initAct(my_todo_list, 6)), []); //componentDidMount\n  const onRemove = useCallback(id => () => dispatch(removeAct(id)), []);\n  const onCheck = useCallback(id => () => dispatch(checkAct(id)), []);\n  const changeView = useCallback(show => () => dispatch(viewAct(show)), []);\n  const addNewTask = useCallback(() => dispatch(addTaskAct()), []);\n  const setNewTaskName = useCallback(\n    e => dispatch(changeNameAct(e.target.value)),\n    []\n  );\n  return (\n    <Container>\n      <Global/>\n      <Select disabled={state.show === 'all'} onClick={changeView('all')}>\n        All\n      </Select>\n      <Select disabled={state.show === 'done'} onClick={changeView('done')}>\n        Done\n      </Select>\n      <Select disabled={state.show === 'undone'} onClick={changeView('undone')}>\n        Undone\n      </Select>\n      <br/>\n      <div>\n        {state.tasks\n          .filter(x => state.show === 'all' || (x.done && state.show === 'done') || (!x.done && state.show === 'undone'))\n          .map(x => (\n            <TodoItem\n              id={x.id}\n              name={x.name}\n              onRemove={onRemove(x.id)}\n              onCheck={onCheck(x.id)}\n              done={x.done}\n            />\n          ))}\n      </div>\n      <NewTaskInput\n        type=\"text\"\n        onChange={setNewTaskName}\n        value={state.newTask}\n      />\n      <AddButton onClick={addNewTask}>&#xf0fe;</AddButton>\n    </Container>\n  );\n}\n\nexport default App;\n","export const initAct = (tasks, lastId) => ({ type: \"INIT\", tasks, lastId });\nexport const viewAct = show => ({ type: \"CHANGE_VIEW\", show });\nexport const removeAct = id => ({ type: \"REMOVE\", id });\nexport const checkAct = id => ({ type: \"CHECK\", id });\nexport const addTaskAct = () => ({ type: \"ADD_NEW_TASK\" });\nexport const changeNameAct = newTask => ({\n  type: \"CHANGE_NEW_TASK_NAME\",\n  newTask\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}